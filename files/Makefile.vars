
VERSION = 2.0
MATRICKS_DIR = #MATRICKS_DIR#
MATRICKS_INCLUDEDIR = $(MATRICKS_DIR)/include
MATRICKS_LIBDIR = $(MATRICKS_DIR)/lib
TEMP = /tmp/
TDIR = $(TEMP)/$(FNAME)
SHELL = /bin/bash
CPP = /usr/bin/g++ 

########################################################################
#
#-O0 Reduce compilation time and make debugging produce the expected results. This is the default.
#-O1 Optimize. Optimizing compilation takes somewhat more time, and a lot more memory for a large function.
#-O2 Optimize even more. GCC performs nearly all supported optimizations that do not involve a space-speed tradeoff. The compiler does not perform loop unrolling or function inlining when you specify -O2. As compared to -O, this option increases both compilation time and the performance of the generated code.
#-O3 Optimize yet more. -O3 turns on all optimizations specified by -O2 and also turns on the -finline-functions, -funswitch-loops, -fpredictive-commoning, -fgcse-after-reload and -ftree-vectorize options.
#-Os Optimize for size. -Os enables all -O2 optimizations that do not typically increase code size. It also performs further optimizations designed to reduce code size.
#
########################################################################

COPTIMIZE = -finline-functions -finline-limit=750 -O0

COPTS += 
LOPTS += 

INCLUDES += -I $(MATRICKS_INCLUDEDIR) 
LIBS += -L$(MATRICKS_LIBDIR) -lmatricks

LIB_LAPACK =  -llapack  -lg2c


CPPFLAGS = $(COPTS) $(COPTIMIZE) $(INCLUDES)
LDFLAGS =  $(LOPTS)

EXECUTABLES := $(shell find . -type f -executable)

